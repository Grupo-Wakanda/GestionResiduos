@startuml

package "ContenedorContenedores" {
   class Contenedor{
       -id: long
       -capacidad: double
       -residuos: List<Residuo>
       +Contenedor(capacidad: double, residuos: List<Residuo>, tipo: String)
   }
   class ContenedorOrganico{
       +Contenedor(capacidad: double, residuos: List<Residuo>, tipo: String)
   }
   class ContenedorEnvases{
       +Contenedor(capacidad: double, residuos: List<Residuo>, tipo: String)
   }
   class ContenedorPlastico{
       +Contenedor(capacidad: double, residuos: List<Residuo>, tipo: String)
   }
   class ContenedorPapelCarton{
       +Contenedor(capacidad: double, residuos: List<Residuo>, tipo: String)
   }
   class ContenedorEnvases extends Contenedor
   class ContenedorPlastico extends Contenedor
   class ContenedorPapelCarton extends Contenedor
   class ContenedorOrganico extends Contenedor
   class ContenedorRepository{
       +guardarContenedor()
       +eliminarContenedor()
   }
    class ContenedorService{
         +crearContenedor()
         +agregarContenedor(contenedor: Contenedor)
         +eliminarContenedor()
    }
    class ContenedorController{}
    interface esRecolectable{
            +recolectar()
    }
    note top of esRecolectable: si la capacidad excede x, podemos poner en el menu que "contenedor1 necesita recoleccion" (con algun punto rojo o algo)
    Contenedor -- ContenedorService
    ContenedorRepository --- ContenedorService
    ContenedorController - ContenedorRepository
    class Contenedor implements esRecolectable


}

package "ResiduoResiduos" {
    abstract class Residuo{
        -id: long
        -tipo: String
        -peso: double
        +Residuo(tipo: String, peso: double)
    }
    class ResiduoOrganico{
        +Residuo("Organico": String, peso: double)
    }
    class ResiduoEnvases{
        +Residuo("Envases": String, peso: double)
    }
    class ResiduoPlastico{
        +Residuo("Plastico": String, peso: double)
    }
    class ResiduoPapelCarton{
        +Residuo("PapelCarton": String, peso: double)
    }
    class ResiduoOrganico extends Residuo
    class ResiduoEnvases extends Residuo
    class ResiduoPlastico extends Residuo
    class ResiduoPapelCarton extends Residuo

    class ResiduoService{
        +crearResiduo()
        +agregarResiduo(residuo: Residuo)
        +eliminarResiduo()
    }
    class ResiduoRepository{
        +guardarResiduo()
        +eliminarResiduo()
    }
    class ResiduoController{}
    Residuo -- ResiduoService
    ResiduoRepository --- ResiduoService
    ResiduoController - ResiduoRepository
}



class GestorResiduos{
    +separarResiduo()
    +tirarResiduo()
    +vaciarContenedor()
}
note top of GestorResiduos: se encarga de todo lo que tenga que ver entre Conteneodor y Residuo.

ResiduoService --- GestorResiduos
ContenedorService --- GestorResiduos

@enduml